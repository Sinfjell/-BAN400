library (dplyr)
library (tidyr)
library (readx1)
library (dplyr)
library (tidyr)
library (readx1)
install.packages(dplyr)
install.packages("dplyr")
install.packages("dplyr")
install.packages("tidyr")
install.packages("readxl")
setwd("/Users/sinfjell/Documents/R-lecture-21-aug")
library (dplyr)
library (tidyr)
library (readx1)
library (readxl)
library (dplyr)
library (tidyr)
library (readxl)
sales ‹- read_excel("data-geilo xlsx", sheet-"Sales")
sales ‹- read_excel("data-geilo xlsx", sheet="Sales")
library (dplyr)
library (tidyr)
library (readxl)
sales ‹- read_excel("data-geilo xlsx", sheet="Sales")
head (sales)
library (dplyr)
library (tidyr)
library (readxl)
sales ‹- read_excel("data-geilo xlsx", sheet="Sales")
sales <- read_excel("data-geilo xlsx", sheet="Sales")
library (dplyr)
library (tidyr)
library (readxl)
sales <- read_excel("data-geilo xlsx", sheet="Sales")
library (dplyr)
library (tidyr)
library (readxl)
sales <- read_excel("data-geilo.xlsx", sheet="Sales")
setwd("/Users/sinfjell/Documents/ban400 lesson 2")
library (dplyr)
library (tidyr)
library (readxl)
sales <- read_excel("data-geilo.xlsx", sheet="Sales")
head (sales)
sales[sales$cocoa > 0,]
sales[sales$cocoa > 10,]
filter(sales, cocoa > 10)
filter(sales, cocoa > 5)
filter(sales, cocoa > 5) |> head()
filter(sales, cocoa > 5) |>
head()
sales[sales$cocoa > 10,]
filter(sales, cocoa > 5) |>
head()
sales |> arrange(cocoa, swix, orange)
|> head()
|> head()
%>%  head()
|>   head()
sales |>
arrange(cocoa, desc(swix), desc(orange)) |>
head()
sales |>
arrange(cocoa, swix, orange) |> head()
sales |>
arrange(cocoa, swix, orange) |> head()
library (dplyr)
library (tidyr)
library (readxl)
sales <- read_excel("data-geilo.xlsx", sheet="Sales")
head (sales)
sales[sales$cocoa > 10,]
filter(sales, cocoa > 5)
sales |>
arrange(cocoa, swix, orange) |> head()
sales |>
arrange(cocoa, desc(swix), orange) |> head()
sales |>
select(cocoa) |> head()
sales |>
select(-cocoa) |> head()
sales |>
summarize(cocoa) |> head()
sales |>
summarize(cocoa) |> head()
summarize(sum_cocoa =sum(cocoa) |> head()
sales |>
sales |>
summarise(sum_cocoa = sum(cocoa)) |> head()
head (sales)
sales |>
summarise(sum_total = sum(cocoa+orange+swix)) |> head()
cocoa_sales <- sales |> filter(cocoa>0) |>
head()
cocoa_sales <- sales |> filter(cocoa>0) |>
head()
cocoa_sales <- sales |> filter(cocoa>0) |>
head(cocoa_sales)
cocoa_sales <- sales |> filter(cocoa>0) |>
head(cocoa_sales)
cocoa_sales <- sales |> filter(cocoa>0) |>
head(cocoa_sales)
cocoa_sales <- sales |> filter(cocoa > 0)
head(cocoa_sales)
min_items <- min(cocoa_sales)
min_items <- min(cocoa_sales$cocoa)
min_items <- min(cocoa_sales$cocoa) |> head()
print(min_items)
max_items <- min(cocoa_sales$cocoa)
print(min_items)
print("min items purchased:" min_items, max_items)
print("min items purchased:", min_items, max_items)
head(cocoa_sales)
min_items <- min(cocoa_sales$cocoa)
max_items <- max(cocoa_sales$cocoa)
print("min items purchased:", min_items, max_items)
print("min items purchased:", min_items, "\n", "max items purchased:", max_items)
cat("min items purchased:", min_items, "\n", "max items purchased:", max_items)
# 2.3
sales |> group_by(customer)
# 2.3
sales |> group_by(customer) |> head()
# 2.3
sales |> group_by(customer) |> filter(cocoa > 2)
# 2.3
sales  |> filter(cocoa > 2)
|> group_by(customer)
# 2.3
sales |> group_by(customer) |> filter(cocoa > 2)
# 2.3
sales |> group_by(customer) |> filter(oranges > 2)
# 2.3
sales |> group_by(customer) |> filter(orange > 2)
# 2.3
sales |> group_by(customer) |> filter(orange > 2) |>
sum(cocoa)
# 2.3
sales |> group_by(customer) |> filter(orange > 2) |>
sum(cocoa)
# 2.3
sales |> group_by(customer) |> filter(orange > 2) |>
sum_orange = sum(orange)
sum_orange = sum(Orange)
# 2.3
sales |> group_by(customer) |> mutate(orange)
# 2.3
sales |> group_by(customer) |> mutate(orange) |>
head()
# 2.3
sales |> group_by(customer) |> mutate(sum_orange = sum(orange)) |>
head()
# 2.3
sales |> group_by(customer) |> mutate(sum_orange = sum(orange)) |>
filter(sum_orange > 2)
sales |>
group_by(customer) |>
mutate(sum.orange = sum(orange)) |>
filter(sum.orange > 2) |>
ungroup() |>
summarise(sum.cocoa = sum(cocoa))
sales |>
group_by(customer) |>
mutate(sum.orange = sum(orange)) |>
filter(sum.orange > 2) |>
ungroup() |>
summarise(sum.cocoa = sum(cocoa))
head()
sales |> group_by(customer) |> mutate(sum_orange = sum(orange)) |>
filter(sum_orange > 2)
head()
# 2.3
sales |> group_by(customer) |> mutate(sum_orange = sum(orange)) |>
filter(sum_orange > 2)
# 2.3
sales |> group_by(customer) |> mutate(sum_orange = sum(orange)) |>
filter(sum_orange > 2) |> ungroup() |>
summarize(sum.cocoa = sum(cocoa))
sales |>
group_by(customer) |>
mutate(sum.orange = sum(orange)) |>
filter(sum.orange > 2) |>
ungroup() |>
summarise(sum.cocoa = sum(cocoa))
# See that sales stores transactions, as well as a link to a
# customer number:
head(sales)
?customer
?customer()
help()
test <- sales inner_join(customer)
test <- sales inner_join(customers, by=join_by(customer==customer))
test <- sales  |>
inner_join(customers, by=join_by(customer==customer))
sales  |>
inner_join(customers, by=join_by(customer==customer))
sales  |>
left_join(customers, by=join_by(customer==customer))
# Read in both sheets
sales <- read_excel("data-geilo.xlsx", sheet="Sales")
customers <- read_excel("data-geilo.xlsx", sheet="Customers")
# See that sales stores transactions, as well as a link to a
# customer number:
head(sales)
sales  |>
left_join(customers, by=join_by(customer==customer))
joined_datasets <- sales |>
left_join(customers, by = "customers")
joined_datasets <- sales |>
left_join(customers, by = "customer")
joined_datasets <- sales |>
left_join(customers, by = "customer") |> head()
joined_datasets <- sales |>
left_join(customers, by = "customer")
View(customers)
View(sales)
# Read in both sheets
sales <- read_excel("data-geilo.xlsx", sheet="Sales")
customers <- read_excel("data-geilo.xlsx", sheet="Customers")
# See that sales stores transactions, as well as a link to a
# customer number:
head(sales)
joined_datasets <- sales |>
left_join(customers, by = "customer")
joined_datasets <- sales |>
left_join(customers, by = "customer")
joined_datasets <- sales |>
left_join(customers, by = "customer") |> head()
# Read in both sheets
sales <- read_excel("data-geilo.xlsx", sheet="Sales")
customers <- read_excel("data-geilo.xlsx", sheet="Customers")
# See that sales stores transactions, as well as a link to a
# customer number:
head(sales)
joined_datasets <- sales |>
left_join(customers, by = "customer") |> head()
joined_datasets <- sales |>
left_join(customers, by = "customer") |>
head(joined_datasets)
joined_datasets <- sales |>
left_join(customers, by = "customer") |>
head(joined_datasets)
joined_datasets <- sales |>
left_join(customers, by = "customer") |>
head(joined_datasets)
# Read in both sheets
sales <- read_excel("data-geilo.xlsx", sheet="Sales")
customers <- read_excel("data-geilo.xlsx", sheet="Customers")
# See that sales stores transactions, as well as a link to a
# customer number:
head(sales)
joined_datasets <- sales |>
left_join(customers, by = "customer") |>
head(joined_datasets)
joined_datasets <- sales |>
left_join(customers, by = "customer") |> head()
print(joined_datasets)
joined_datasets <- sales |>
inner_join(customers, by = "customer") |> head()
print(joined_datasets)
head(customers)
combined_data_full <- anti_join(sales, customers, by = "customer")
print(head(combined_data_full))
combined_data_full <- full_join(sales, customers, by = "customer")
print(head(combined_data_full))
combined_data_full <- inner_join(sales, customers, by = "customer")
print(head(combined_data_full))
combined_data_full <- left_join(sales, customers, by = "customer")
print(head(combined_data_full))
joined_data$customer <- ifelse(is.na(joined_data$customer),
"Non-Registered", joined_data$customer)
joined_data <- left_join(sales, customers, by = "customer")
joined_data$customer <- ifelse(is.na(joined_data$customer),
"Non-Registered", joined_data$customer)
# See that sales stores transactions, as well as a link to a
# customer number:
head(sales)
head(customers)
# See that sales stores transactions, as well as a link to a
# customer number:
head(sales)
sales |> group_by(customer) |>
mutate(sum_trans = sum(trans))
sales |> group_by(customer) |>
mutate(sum_trans = sum(trans), sum_orange = sum(orange))
sales |> group_by(customer) |>
mutate(sum_trans = sum(trans), sum_orange = sum(orange),
sum_cocoa = sum(cocoa), sum_swix = sum(swix))
setwd("~/Library/CloudStorage/OneDrive-NorgesHandelshøyskole/BAN400/Github/Assignment_2")
install.packages("nycflights13")
head(flights)
library(nycflights13)
library(dplyr)
head(flights)
head(flights)
flights
library(nycflights13)
library(dplyr)
library(tidyr)
flights
flights
head(flights)
# problem 1
flights <- flights |> filter(arr_delay > 2)
# problem 1
flights <- flights |> filter(arr_delay > 2) |> head()
# problem 1
flights <- flights |> filter(arr_delay > 2) |> head() |> print()
# problem 1
flights <- flights |> filter(arr_delay > 2) |>
arrange(arr_delay)
|> head() |> print()
# problem 1
flights <- flights |> filter(arr_delay > 2) |>
arrange(arr_delay) |>  head() |> print()
arrange(desc(arr_delay) |>  head() |> print()
arrange(desc(arr_delay) |>  head() |> print()
library(nycflights13)
library(dplyr)
library(tidyr)
head(flights)
# problem 1
flights <- flights |> filter(arr_delay > 2) |>
arrange(desc(arr_delay) |>  head() |> print()
library(nycflights13)
library(nycflights13)
library(dplyr)
library(tidyr)
head(flights)
# problem 1
flights <- flights |> filter(arr_delay > 2) |>
arrange(desc(arr_delay)) |>  head() |> print()
# problem 1
flights <- flights |> filter(arr_delay > 120) |>
arrange(desc(arr_delay)) |>  head() |> print()
library(nycflights13)
library(dplyr)
library(tidyr)
head(flights)
# problem 1
flights <- flights |> filter(arr_delay > 120) |>
arrange(desc(arr_delay)) |>  head() |> print()
library(nycflights13)
library(dplyr)
library(tidyr)
head(flights)
# problem 1
flights <- flights |> filter(arr_delay > 120) |>
arrange(desc(arr_delay)) |>  head() |> print()
library(nycflights13)
library(dplyr)
library(tidyr)
head(flights)
# problem 1
flights <- flights |> filter(arr_delay > 2) |>
arrange(desc(arr_delay)) |>  head() |> print()
library(nycflights13)
library(dplyr)
library(tidyr)
head(flights)
# problem 1
flights <- flights |> filter(arr_delay > 2) |>  head() |> print()
# problem 1
flights <- flights |> filter(arr_delay > 2) |>  head() |> print()
library(nycflights13)
library(dplyr)
library(tidyr)
head(flights)
# problem 1
flights <- flights |> filter(arr_delay > 2) |>  head() |> print()
# problem 1
flights |> filter(arr_delay > 2) |>  head() |> print()
library(nycflights13)
library(dplyr)
library(tidyr)
head(flights)
# problem 1
flights <- flights |> filter(arr_delay > 2) |>
arrange(desc(arr_delay)) |>  head() |> print()
# problem 1
flights <- flights |> filter(arr_delay > 2) |>
arrange(desc(arr_delay)) |>  head() |> print()
# problem 1
flights
# problem 1
flights |> filter(arr_delay > 2)
# problem 1
flights |> filter(arr_delay > 2) |> head()
# problem 1
flights |> filter(arr_delay > 2) |> head() |> print()
# problem 1
flights |> filter(arr_delay >= 2)
library(nycflights13)
library(dplyr)
library(tidyr)
head(flights)
# problem 1
flights |> filter(arr_delay >= 2)
library(nycflights13)
library(dplyr)
library(tidyr)
head(flights)
# problem 1
flights |> filter(arr_delay >= 2) |> head()
library(nycflights13)
library(dplyr)
library(tidyr)
head(flights)
# problem 1
flights |> filter(arr_delay >= 2) |> head()
head(flights)
library(nycflights13)
library(dplyr)
library(tidyr)
head(flights)
head(flights)
View(combined_data_full)
View(joined_data)
View(flights)
View(flights)
View(flights)
install.packages(nycflights13)
install.packages("nycflights13")
install.packages("nycflights13")
head(flights)
View(cocoa_sales)
